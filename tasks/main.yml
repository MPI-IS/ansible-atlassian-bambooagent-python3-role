# This file installs packages and declares associated capabilities
# For each defined package,
# - it transfers the package to the host
# - it runs a specific installation script
# - it declares the associated capabilities, if any
# - it does not cleans up the file. The file is in /tmp, so it should be safe
#   to keep it there to accelerate further transfers


- block:
  - include: check_vars.yml
    tags:
      - bambooagent:checks
      - checks

#
#
# Windows / work in progress
#
#
#- name: '[PYTHON3] checking existing Java installation'
#  win_command: "java -version"
#  register: java_checking_windows
#  ignore_errors: True
#  when: ansible_os_family=="Windows"
#
#- block:
#
#  - name: '[PYTHON3] copy the installer'
#    win_copy:
#      src: "{{ python3_installer.file }}"
#      dest: "{{ansible_env['TEMP']}}/"  
#    when: False
#
#  - name: '[PYTHON3] installation'
#    win_command: "start /w {{python3_installer.file | basename }} /quiet"
#    args:
#      executable: cmd
#      chdir: "{{ ansible_env['TEMP'] }}"
#
#  - name: '[PYTHON3] installation'
#    win_package:
#      path: "{{ ansible_env['TEMP'] }}\{{python3_installer.file | basename}}"
#      state: present
#      InstallAllUsers=1 Include_debug=1 TargetDir=C:\Python34
#
#  - name: '[PYTHON3] check python3 from prompt'
#    win_command: "python3 --version"
#    register: python3_checking_windows
#    ignore_errors: False
#  
#  # can be in a separate block if we do not want to install java on some conditions
#  - name: '[PYTHON3] finding the installation path'
#    win_shell: "(Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\JavaSoft\\Java Development Kit\\1.{{ java_version_major }}' -Name JavaHome).JavaHome"
#    register: python3_home_windows_tmp
#  
#  # replacing backslashes to forward ones
#  - name: '[PYTHON3] finding the installation path'
#    set_fact:
#      python_binary_location: '{{ "".join(python3_home_windows_tmp.stdout_lines) | replace("\\", "/") }}'
#      
#  when: ansible_os_family=="Windows"




#
# OSX
#
- block:
  - name: '[PYTHON3] transfer installation package'
    copy:
      src: "{{ python3_installer.file }}"
      dest: "/tmp/{{ python3_installer.file | basename }}"

  - name: '[PYTHON3] package installation'
    shell: "installer -allowUntrusted -dumplog -pkg \"/tmp/{{ python3_installer.file | basename }}\" -target /"
        
  - name: '[PYTHON3] locating python3 binary'
    shell: 'bash -l -c "which python3"'
    register: python3_which_output
    ignore_errors: False
    tags: 
    - capability
    
  - name: '[PYTHON3] locate'
    set_fact:
      python_binary_location="{{ python3_which_output.stdout }}"
    tags: 
    - capability
          
  when: ansible_distribution=="MacOSX"
  tags: 
  - python3 

  rescue:
  - debug:
      msg="An error occured"
  - command: /bin/false

#
# linux: installation with regular packages
#
- block:
  - name: '[PYTHON3] install python3 standard packages'
    apt: name="{{ item }}" update_cache=yes state=present cache_valid_time=3600
    with_items: 
     - "{{ python%s.%s' % (python3_version.major, python3_version.minor) }}"
     - "{{ libpython%s.%s-dev' % (python3_version.major, python3_version.minor) }}"

  when: (ansible_distribution=="Ubuntu")
  tags: 
  - python3
  - installation 


#
# REGISTER python3 into bamboo capabilities
#
- name: '[BAMBOO][PYTHON3] register python3 capability'
  set_fact:
    bamboo_capabilities: "{{ bamboo_capabilities | combine({'system.builder.command.python%s.%s' % (python3_version.major, python3_version.minor): python_binary_location }) }}"
  tags: 
  - python3
  - capability 
    